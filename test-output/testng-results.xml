<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-06T16:13:21 IST" name="Suite" finished-at="2021-04-06T16:15:09 IST" duration-ms="107898">
    <groups>
    </groups>
    <test started-at="2021-04-06T16:13:21 IST" name="Test" finished-at="2021-04-06T16:15:09 IST" duration-ms="107898">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:13:51 IST" name="setup" finished-at="2021-04-06T16:13:53 IST" duration-ms="2139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithInValidCredentailsTest()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:13:53 IST" name="loginWithInValidCredentailsTest" finished-at="2021-04-06T16:13:59 IST" duration-ms="5155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInValidCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:13:59 IST" name="tearDown" finished-at="2021-04-06T16:14:00 IST" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:14:00 IST" name="setup" finished-at="2021-04-06T16:14:02 IST" duration-ms="2170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithValidCredentailsTest()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:14:02 IST" name="loginWithValidCredentailsTest" finished-at="2021-04-06T16:14:06 IST" duration-ms="3983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:14:06 IST" name="tearDown" finished-at="2021-04-06T16:14:07 IST" duration-ms="1089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:14:07 IST" name="setup" finished-at="2021-04-06T16:14:09 IST" duration-ms="1954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="loginWithoutProvidingAnyCredentailsTest()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:14:09 IST" name="loginWithoutProvidingAnyCredentailsTest" finished-at="2021-04-06T16:14:22 IST" duration-ms="12730" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"div[class='alert alert-danger alert-dismissible']"}
  (Session info: chrome=89.0.4389.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-4V52DMIG', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.114, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\Users\arunm\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:65101}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d2e65e3fb728ee6e926d496b1a3cf8c1
*** Element info: {Using=css selector, value=div[class='alert alert-danger alert-dismissible']}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"div[class='alert alert-danger alert-dismissible']"}
  (Session info: chrome=89.0.4389.114)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-4V52DMIG', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.10'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 89.0.4389.114, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\Users\arunm\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:65101}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: d2e65e3fb728ee6e926d496b1a3cf8c1
*** Element info: {Using=css selector, value=div[class='alert alert-danger alert-dismissible']}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByCssSelector(RemoteWebDriver.java:420)
at org.openqa.selenium.By$ByCssSelector.findElement(By.java:431)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy12.getText(Unknown Source)
at tests.LoginTest.loginWithoutProvidingAnyCredentailsTest(LoginTest.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutProvidingAnyCredentailsTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@156b88f5]" started-at="2021-04-06T16:14:22 IST" name="tearDown" finished-at="2021-04-06T16:14:24 IST" duration-ms="2069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.ForgotPasswordTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:24 IST" name="setup" finished-at="2021-04-06T16:14:25 IST" duration-ms="1809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="resetPasswordForInvalidEmailAddressTest()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:25 IST" name="resetPasswordForInvalidEmailAddressTest" finished-at="2021-04-06T16:14:30 IST" duration-ms="4669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPasswordForInvalidEmailAddressTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:30 IST" name="tearDown" finished-at="2021-04-06T16:14:31 IST" duration-ms="1053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:31 IST" name="setup" finished-at="2021-04-06T16:14:33 IST" duration-ms="2018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="resetPasswordTest()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:33 IST" name="resetPasswordTest" finished-at="2021-04-06T16:14:41 IST" duration-ms="7672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPasswordTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:41 IST" name="tearDown" finished-at="2021-04-06T16:14:42 IST" duration-ms="1241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:42 IST" name="setup" finished-at="2021-04-06T16:14:44 IST" duration-ms="2214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="resetPasswordWithoutProvidingEmailAddressTest()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:44 IST" name="resetPasswordWithoutProvidingEmailAddressTest" finished-at="2021-04-06T16:14:48 IST" duration-ms="3483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetPasswordWithoutProvidingEmailAddressTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.ForgotPasswordTest@71def8f8]" started-at="2021-04-06T16:14:48 IST" name="tearDown" finished-at="2021-04-06T16:14:49 IST" duration-ms="1025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.ForgotPasswordTest -->
      <class name="tests.RegisterAccountTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:21 IST" name="setup" finished-at="2021-04-06T16:13:25 IST" duration-ms="3832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerNewAccountWithMandatoryFieldsTest()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:25 IST" name="registerNewAccountWithMandatoryFieldsTest" finished-at="2021-04-06T16:13:32 IST" duration-ms="6766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewAccountWithMandatoryFieldsTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:32 IST" name="teardown" finished-at="2021-04-06T16:13:33 IST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:33 IST" name="setup" finished-at="2021-04-06T16:13:35 IST" duration-ms="2000" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerNewAccountWithSubscriptionTest()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:35 IST" name="registerNewAccountWithSubscriptionTest" finished-at="2021-04-06T16:13:42 IST" duration-ms="7101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewAccountWithSubscriptionTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:42 IST" name="teardown" finished-at="2021-04-06T16:13:43 IST" duration-ms="1078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:43 IST" name="setup" finished-at="2021-04-06T16:13:45 IST" duration-ms="2033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="registerNewAccountWithoutEnteringAnyFeildsTest()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:45 IST" name="registerNewAccountWithoutEnteringAnyFeildsTest" finished-at="2021-04-06T16:13:50 IST" duration-ms="5308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerNewAccountWithoutEnteringAnyFeildsTest -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:tests.RegisterAccountTest@306f16f3]" started-at="2021-04-06T16:13:50 IST" name="teardown" finished-at="2021-04-06T16:13:51 IST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- tests.RegisterAccountTest -->
      <class name="tests.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:14:49 IST" name="setup" finished-at="2021-04-06T16:14:51 IST" duration-ms="1948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchForANonExistingProductTest()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:14:51 IST" name="searchForANonExistingProductTest" finished-at="2021-04-06T16:14:54 IST" duration-ms="3475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForANonExistingProductTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:14:54 IST" name="tearDown" finished-at="2021-04-06T16:14:55 IST" duration-ms="972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:14:55 IST" name="setup" finished-at="2021-04-06T16:14:57 IST" duration-ms="2028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchTest()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:14:57 IST" name="searchTest" finished-at="2021-04-06T16:15:02 IST" duration-ms="4587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:15:02 IST" name="tearDown" finished-at="2021-04-06T16:15:03 IST" duration-ms="1114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:15:03 IST" name="setup" finished-at="2021-04-06T16:15:05 IST" duration-ms="2094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="searchWithoutProvidingAnyProductTest()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:15:05 IST" name="searchWithoutProvidingAnyProductTest" finished-at="2021-04-06T16:15:08 IST" duration-ms="2616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithoutProvidingAnyProductTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.SearchTest@383bfa16]" started-at="2021-04-06T16:15:08 IST" name="tearDown" finished-at="2021-04-06T16:15:09 IST" duration-ms="1080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SearchTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
